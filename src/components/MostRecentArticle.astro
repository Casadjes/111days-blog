---
import { formatDate } from "@/utils";
import type { CollectionEntry } from "astro:content";

const { article } = Astro.props;

interface Props {
  article: CollectionEntry<"blog">;
}
---

<div class="relative inline-block w-full sm:w-auto cursor-pointer rounded-2xl">
  <a href={`/articles/${article.slug}`}>
    <img
      src={`/images/${article.data.image}.avif`}
      srcset={`
    /images/${article.data.image}.avif 326w,  
    /images/${article.data.image}.avif 576w,
    /images/${article.data.image}.avif 704w,
    /images/${article.data.image}.avif 470w
    `}
      sizes="
    (max-width: 390px) 326px,
    (max-width: 640px) 576px,
    (max-width: 768px) 704px,
    (max-width: 1024px) 470px,
    598px
    "
      alt="imagen del articulo"
      class="size-full object-cover object-center rounded-xl mb-6"
      loading="eager"
      decoding="async"
      width="598"
      height="360"
    />

    <div
      class="absolute p-5 inset-0 flex flex-col items-center justify-center bg-black opacity-80 hover:opacity-70 transition duration-300 ease-in-out text-white text-center rounded-2xl">
      <div>
        <h2 class="text-2xl font-semibold sm:text-3xl">{article.data.title}</h2>
        <p class="text-xl mt-4">{formatDate(article.data.pubDate)}</p>

        <div class="flex mt-4 justify-center">
          {
            article.data.tags.map((tag: string) => (
              <span class="px-2 py-1 border text-white rounded-full text-xs mr-2">{tag}</span>
            ))
          }
        </div>
      </div>
    </div>
  </a>
</div>
